/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Hospital;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.HospitalBackOfficerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kathe
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private HospitalEnterprise hospital;
    private Network mynetwork;
    //private HospitalBackOfficerOrganization hospitalBackOfficerOrganization;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer,UserAccount useraccount,Network mynetwork,HospitalEnterprise hospital) {
        initComponents();
        
        this.userProcessContainer=userProcessContainer;
        this.useraccount=useraccount;
        this.mynetwork=mynetwork;
        this.hospital=hospital;
        //this.hospitalBackOfficerOrganization=(HospitalBackOfficerOrganization)organization;
        
        populateTable();
        populateJComboBox();
    }

    public void populateTable(){
         DefaultTableModel model = (DefaultTableModel)processWorkRequestJTable.getModel();
         model.setRowCount(0);
         System.out.println(useraccount);
         for(WorkRequest request:useraccount.getWorkQueue().getWorkRequestList()){
             System.out.println("useraccount");
             if(request.getClass().getName().contains("VolunteerWorkRequest")){
                continue;
            }
             HospitalWorkRequest hrequest=(HospitalWorkRequest)request;
             Object[]row=new Object[5];
             row[0]=hrequest.getRequestId();
             row[1]=hrequest.getSender().getPerson().getName();
             row[2]=hrequest.getToEnterprise()==null?null:hrequest.getToEnterprise().getName();
             row[3]=hrequest;
             row[4]=hrequest.getStatus();
             
             model.addRow(row);
         }
    }
    
    public void populateJComboBox(){
        enterpriseJComboBox.removeAllItems();
        
        for(Enterprise enterprise:mynetwork.getEnterpriseDirectory().getEnterpriseList()){
            System.out.println(enterprise.getEnterpriseType());
            if(enterprise.getEnterpriseType().toString().equals("Charity")){
                enterpriseJComboBox.addItem(enterprise.toString());
            }
            
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        processWorkRequestJTable = new javax.swing.JTable();
        viewJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        enterpriseJComboBox = new javax.swing.JComboBox<>();
        submitJButton = new javax.swing.JButton();

        processWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Sender", "Charity", "Result", "Status"
            }
        ));
        jScrollPane1.setViewportView(processWorkRequestJTable);

        viewJButton.setText("View DemandGood");
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(viewJButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(submitJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                        .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(142, 142, 142))))
                        .addContainerGap(38, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitJButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow=processWorkRequestJTable.getSelectedRow(),col=0;
         if(selectedRow<0){
             JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
         }
         
         Integer wrSelectedRow=(Integer)processWorkRequestJTable.getValueAt(selectedRow, 0);
         
         HospitalWorkRequest hrequest=null;
         for(WorkRequest request:useraccount.getWorkQueue().getWorkRequestList()){
             if(request.getClass().getName().contains("VolunteerWorkRequest")){
                continue;
            }
            HospitalWorkRequest newrequest=(HospitalWorkRequest)request;
            if(wrSelectedRow.equals(newrequest.getRequestId())){
                hrequest=newrequest;
                break;
            }
        }
         
        this.userProcessContainer.add("ViewDemandGoodJPanel",new ViewDemandGoodJPanel(this.userProcessContainer,useraccount,hospital,hrequest));
        CardLayout cLayout = (CardLayout) this.userProcessContainer.getLayout();
        cLayout.next(userProcessContainer);
         
    }//GEN-LAST:event_viewJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow =processWorkRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        HospitalWorkRequest hospitalWorkRequest=(HospitalWorkRequest)processWorkRequestJTable.getValueAt(selectedRow, 3);
        
        if(hospitalWorkRequest.getToEnterprise()!=null){
            JOptionPane.showMessageDialog(this, "You can't send toEnterprise twice!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Enterprise toEnterprise=null;
        
        for(Enterprise enterprise:mynetwork.getEnterpriseDirectory().getEnterpriseList()){
            if(enterpriseJComboBox.getSelectedItem().toString().equals(enterprise.toString())){
                toEnterprise=enterprise;
                hospitalWorkRequest.setToEnterprise(toEnterprise);
                toEnterprise.getWorkQueue().getWorkRequestList().add(hospitalWorkRequest);
                hospitalWorkRequest.setStatus("Hospital Send");
            }
        }
        
        //hospitalWorkRequest.setStatus("Hospital Send");
        populateTable();
    }//GEN-LAST:event_submitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox<String> enterpriseJComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable processWorkRequestJTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton viewJButton;
    // End of variables declaration//GEN-END:variables
}
