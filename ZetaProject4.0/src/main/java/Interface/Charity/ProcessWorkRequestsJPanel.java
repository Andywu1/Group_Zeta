/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Charity;

import Business.Enterprise.CharityEnterprise;
import Business.Organization.DriverOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kathe
 */
public class ProcessWorkRequestsJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private CharityEnterprise charity;
    
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestsJPanel(JPanel userProcessContainer,UserAccount useraccount,CharityEnterprise charity) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.useraccount=useraccount;
        this.charity=charity;
        
        populateTable();
        populateJComboBox();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)processJTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request:useraccount.getWorkQueue().getWorkRequestList()){
            Object[]row=new Object[6];
            row[0]=request.getRequestId();
            String pattern = "MM-dd-yyyy";
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
            String date = simpleDateFormat.format(request.getRequestDate());
            row[1]=date;
            row[2]=request.getReceiver().getPerson().getName();
            row[3]=request.getDriver()==null?null:request.getDriver().getPerson().getName();
            row[4]=request;
            row[5]=request.getStatus();
            
            model.addRow(row);
        }
    }
    public void populateJComboBox(){
        JComboBox.removeAllItems();
        
        Organization driverorganization=null;
        for(Organization organization:charity.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof DriverOrganization){
                driverorganization=organization;
                break;
            }
        }
        if(driverorganization!=null){
            for(UserAccount ua:driverorganization.getUserAccountDirectory().getUserAccountList()){
                JComboBox.addItem(ua.toString());
                System.out.println(ua.toString());
            }
            System.out.println("yiuyiu" + driverorganization.getUserAccountDirectory().getUserAccountList().toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        processJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        JComboBox = new javax.swing.JComboBox<>();

        processJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "RequestDay", "AidWorker", "Driver", "Result", "Status"
            }
        ));
        jScrollPane1.setViewportView(processJTable);

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        JComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submitJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(JComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitJButton)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow =processJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        HospitalWorkRequest hospitalWorkRequest=(HospitalWorkRequest)processJTable.getValueAt(selectedRow, 4);
        
         if(hospitalWorkRequest.getDriver()!=null){
            JOptionPane.showMessageDialog(this, "You can't choose driver twice!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Organization driverorganization=null;
        for(Organization organization:charity.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof DriverOrganization){
                driverorganization=organization;
                break;
            }
        }
        
        UserAccount driver=null;
        if(driverorganization!=null){
            for(UserAccount useraccount:driverorganization.getUserAccountDirectory().getUserAccountList()){
                if(JComboBox.getSelectedItem().toString().equals(useraccount.toString())){
                    driver=useraccount;
                    hospitalWorkRequest.setDriver(driver);
                    driver.getWorkQueue().getWorkRequestList().add(hospitalWorkRequest);
                    hospitalWorkRequest.setStatus("Collect Finish");
                }
            }
        }
        
        populateTable();
        //UserAccount driver=(UserAccount)JComboBox.getSelectedItem();
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxActionPerformed
        // TODO add your handling code here:
        //populateJComboBox();
    }//GEN-LAST:event_JComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable processJTable;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
